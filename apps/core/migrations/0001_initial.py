# Generated by Django 5.0.6 on 2024-05-16 17:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de modificación"
                    ),
                ),
                ("is_deleted", models.BooleanField(db_index=True, default=False)),
                (
                    "name",
                    models.CharField(max_length=150, verbose_name="Category name"),
                ),
                ("slug", models.SlugField(blank=True, null=True, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "db_table": "category",
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de modificación"
                    ),
                ),
                ("is_deleted", models.BooleanField(db_index=True, default=False)),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=150, verbose_name="Country name"
                    ),
                ),
                ("slug", models.SlugField(blank=True, max_length=255, null=True)),
                (
                    "code",
                    models.CharField(
                        help_text="Ex: Colombia => (co)",
                        max_length=10,
                        verbose_name="Country Code",
                    ),
                ),
            ],
            options={
                "verbose_name": "Country",
                "verbose_name_plural": "Countries",
                "db_table": "country",
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de modificación"
                    ),
                ),
                ("is_deleted", models.BooleanField(db_index=True, default=False)),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=150, verbose_name="City name"
                    ),
                ),
                ("slug", models.SlugField(blank=True, max_length=255, null=True)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="cities_set",
                        to="core.country",
                    ),
                ),
            ],
            options={
                "verbose_name": "City",
                "verbose_name_plural": "Cities",
                "db_table": "city",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de modificación"
                    ),
                ),
                ("is_deleted", models.BooleanField(db_index=True, default=False)),
                ("address", models.TextField(verbose_name="Location Address")),
                (
                    "latitude",
                    models.DecimalField(
                        db_index=True,
                        decimal_places=7,
                        max_digits=10,
                        verbose_name="Lat",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        db_index=True,
                        decimal_places=7,
                        max_digits=10,
                        verbose_name="Long",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="locations_set",
                        to="core.city",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="locations_set",
                        to="core.country",
                    ),
                ),
            ],
            options={
                "verbose_name": "Location",
                "verbose_name_plural": "Location's",
                "db_table": "location",
            },
        ),
        migrations.CreateModel(
            name="LocationCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de modificación"
                    ),
                ),
                ("is_deleted", models.BooleanField(db_index=True, default=False)),
                (
                    "total_reviews",
                    models.IntegerField(
                        db_index=True, default=0, verbose_name="Total reviews"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="locations_categories_set",
                        to="core.category",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="locations_categories_set",
                        to="core.location",
                    ),
                ),
            ],
            options={
                "verbose_name": "Location category",
                "verbose_name_plural": "Location categories",
                "db_table": "location_category",
            },
        ),
        migrations.AddConstraint(
            model_name="location",
            constraint=models.UniqueConstraint(
                fields=("country", "city", "latitude", "longitude"),
                name="unique country, city, latitude and longitude",
                violation_error_message="country, city, latitude and longitude cannot both be repeated",
            ),
        ),
        migrations.AddConstraint(
            model_name="locationcategory",
            constraint=models.UniqueConstraint(
                fields=("location", "category"),
                name="unique category for location",
                violation_error_message="location and category cannot both be repeated",
            ),
        ),
    ]
